@page "/alarm"
@using System.Net.Http.Headers
@using System.Text.Json.Serialization
@using NOAA_Track.Models
@rendermode InteractiveServer
@attribute [StreamRendering]

<PageTitle>Radar Alarms</PageTitle>

<h1>Radar Alarms</h1>
<input @bind-value="location" class="form-control" />
<p>searching for: @location</p>

@if (isLoading)
{
    <p><em>Loading...</em></p>
}
else if (errorMessage != null)
{
    <p><em>Error: @errorMessage</em></p>
}
else
{
    if (data != null)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Version</th>
                    <th>Route ID</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@data.context.Version</td>
                    <td>@data.id</td>
                </tr>
            </tbody>
        </table>

        <table class="table">
            <thead>
                <tr>
                    <th>Type</th>
                    <th>Station ID</th>
                    <th>Status</th>
                    <th>Active Channel</th>
                    <th>Message</th>
                    <th>Time</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in data.Graph)
                {
                    <tr>
                        <td>@item.type</td>
                        <td>@item.stationId</td>
                        <td>@item.status</td>
                        <td>@item.activeChannel</td>
                        <td>@item.message</td>
                        <td>@item.timestamp</td>
                    </tr>
                }
            </tbody>
        </table>
    }
}

@code {
    public HttpClient httpClient = new HttpClient();
    public string location = "KMVX";
    public required ApiResponse data;
    public bool isLoading = true;
    public required string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            httpClient.DefaultRequestHeaders.Add("User-Agent", "WebApp");
            var api_response = await
            httpClient.GetFromJsonAsync<ApiResponse>("https://api.weather.gov/radar/stations/KMVX/alarms");
            data = api_response ?? new ApiResponse() { id = "0.0", Graph = new List<GraphEntry>() };
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
        finally
        {
            isLoading = false;
        }
    }
}
