@page "/satellite/add"
@using NOAA_Track.Models
@using NOAA_Track.Database
@using NOAA_Track.Services
@rendermode InteractiveServer
@inject NavigationManager NavigationManager

@* TODO: What would happen if I had a satellite named add.
How would Blazor handle this?
*@

<PageTitle>Satellite Add</PageTitle>
<h1>Add New Satellite</h1>

@if (true)
{
    // TODO: Restrict input to prevent errors
    <EditForm Model=@satellite OnValidSubmit="HandleSubmit">
        <div class="SatelliteFormAdd">
            <label for="InputName">Name</label>
            <InputText id="InputName" @bind-Value="@satellite.Name"></InputText>

            <label for="InputDescription">Description</label>
            <InputTextArea id="InputDescription" @bind-Value="@satellite.Description"></InputTextArea>

            <label for="InputDateCreated">Date Created</label>
            <InputDate id="InputDateCreated" @bind-Value="@satellite.DateCreated"></InputDate>

            <label for="InputLink">Link</label>
            <InputText id="InputLink" @bind-Value="@satellite.Link"></InputText>

            <button type="submit" class="btn-primary">Add</button>
        </div>
    </EditForm>
}

@code {
    Satellite satellite = new Satellite();
    HttpClient client = new HttpClient();
    bool add_input = false;
    public string? error_input;

    // TODO: Check for duplicates
    // TODO: Popup message letting the user know if the entry was added successfully
    public async Task HandleSubmit(EditContext editContext)
    {
        try
        {
            add_input = true;

            var new_satellite = (Satellite)editContext.Model;
            // TODO: Set up production level endpoints
            var response = await client.PostAsJsonAsync<Satellite>($"http://localhost:3000/satellite/add?name={new_satellite.Name}",
            new_satellite);
        }
        catch (Exception e)
        {
            error_input = e.Message;
        }
        finally
        {
            NavigationManager.NavigateTo("satellite");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
        }
        catch (Exception e)
        {
        }
        finally
        {
        }
    }
}